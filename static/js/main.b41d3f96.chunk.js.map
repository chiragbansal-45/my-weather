{"version":3,"sources":["components/CardComponent.js","components/HeaderComponent.js","components/SearchComponent.js","components/PreviewComponent.js","components/MainComponent.js","App.js","reportWebVitals.js","index.js"],"names":["WeatherInfo","props","className","Media","object","src","data","description","alt","temprature","Date","toLocaleDateString","toLocaleTimeString","Header","Navbar","dark","color","NavbarBrand","href","Search","Form","model","Col","sm","Label","for","Input","type","placeholder","aria-label","aria-describedby","onChange","Button","id","onClick","Preview","Main","e","setState","searchBarInput","target","value","setWeather","city","state","URL","fetch","then","response","ok","error","json","cod","details","main","temp","weather","cardContent","this","Component","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b41d3f96.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Media } from 'reactstrap';\r\n\r\nconst WeatherInfo = (props) => {\r\n    return(\r\n        <div className=\"container\"> \r\n            <div className=\"row\">\r\n                <div className=\"col\"></div>\r\n                <div className=\"flex-container\">\r\n                    <div className=\"inner-container\">\r\n                        <div className=\"image\">\r\n                        <Media object src={`assets/images/${props.data.description}.svg`} alt=\"image not found\" ></Media>\r\n\r\n                        </div>\r\n                        <div className=\"data\">\r\n                            <h2> {props.data.temprature} Â°C</h2>\r\n                            <h3>  {props.data.description} </h3>\r\n                            <h5> {new Date().toLocaleDateString()}</h5>\r\n                            <h5> {new Date().toLocaleTimeString()}</h5>\r\n                        </div>\r\n                    </div>\r\n                    \r\n                </div>\r\n                <div className=\"col\"></div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default WeatherInfo;","import React from 'react';\r\nimport {Navbar,NavbarBrand} from 'reactstrap';\r\n\r\nconst Header = (props) => {\r\n    return(\r\n        <div>\r\n            <div className=\"App\">\r\n                <Navbar dark color=\"primary\">\r\n                    <div className=\"container\">\r\n                        <NavbarBrand href=\"/\" > Chirag Bansal </NavbarBrand>\r\n                    </div>\r\n                 </Navbar>\r\n        </div>\r\n\r\n        </div>\r\n    )\r\n}\r\nexport default Header;","import React from 'react';\r\nimport {Form , Col , Button, Label, Input } from 'reactstrap';\r\n\r\n\r\nconst Search = (props) => {\r\n    return(\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <div className=\"col\"></div>\r\n                <div className=\"col mt-3 mb-3\">\r\n                <Form model=\"city\" >\r\n                <Col sm={12} ><Label for=\"City\" className=\"form-label\"> City </Label></Col>\r\n                <div className=\"input-group mb-3\">\r\n                    <Col ><Input type=\"text\" className=\"form-control\" placeholder=\"Enter the City\" aria-label=\"city\" aria-describedby=\"cityname\" onChange={props.onChange} /></Col>\r\n                    <Button className=\"btn btn-secondary\" type=\"button\" id=\"cityname\" onClick={props.onClick} > search </Button>\r\n\r\n                </div>\r\n\r\n                </Form>\r\n\r\n                </div>\r\n                <div className=\"col\"></div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Search;","import React from 'react';\r\nimport {Media} from 'reactstrap';\r\n\r\nconst Preview = (props) => {\r\n    return(\r\n        <div className=\"flex-container\">\r\n            <div className=\"inner-container\">\r\n            <Media object src={'assets/images/Preview.svg'}\r\n        alt=\"Weather App Icon\" className=\"preview\" />\r\n            </div>\r\n            \r\n\r\n        </div>\r\n        \r\n    )\r\n}\r\nexport default Preview;","import React , {Component} from 'react';\r\nimport  WeatherInfo from './CardComponent';\r\nimport  Header from './HeaderComponent';\r\nimport Search from './SearchComponent';\r\nimport Preview from './PreviewComponent';\r\nclass Main extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            searchBarInput: '',\r\n            details: {\r\n                temprature: null,\r\n                description: ''\r\n            }\r\n        }\r\n\r\n    }\r\n    onChange=(e) => {\r\n        this.setState({searchBarInput: e.target.value})\r\n    }\r\n    setWeather=() => {\r\n            \r\n        const city = this.state.searchBarInput;\r\n        const API_KEY = 'd302d98fe71b4661c7d0b51f198888df';\r\n        const API_URL = 'https://api.openweathermap.org/data/2.5/weather';\r\n        const URL = API_URL + `?q=${city}&appid=${API_KEY}&units=metric`;\r\n       \r\n                fetch(URL)\r\n                .then(response => {\r\n                    if (response.ok) {\r\n                        return response;\r\n                    }\r\n                }, error => {\r\n                    throw error;\r\n                })\r\n                .then(response => response.json())\r\n                .then(data => {\r\n                    if (data.cod === 200) {\r\n                        this.setState({\r\n                            details: {\r\n                                temprature: data.main.temp,\r\n                                description: data.weather[0].main\r\n                            }\r\n                            \r\n                        });\r\n                    }\r\n                    else{\r\n                        throw data.cod;\r\n                    }  \r\n                })\r\n            \r\n        \r\n    }\r\n\r\n\r\n   \r\n    render(){\r\n        let cardContent = <Preview />\r\n        \r\n        if(this.state.details.description === ''){\r\n            cardContent = <Preview />\r\n        }\r\n        else{\r\n            cardContent = <WeatherInfo data={this.state.details}/>\r\n        }\r\n        return(\r\n            <div >\r\n                <Header />\r\n                <Search value={this.state.searchBarInput} \r\n                        onChange={this.onChange}\r\n                        onClick={this.setWeather} />\r\n                {cardContent}\r\n               \r\n        \r\n\r\n            </div>\r\n        )       \r\n    }\r\n}\r\nexport default Main;","\n\nimport './App.css';\nimport  Main  from './components/MainComponent'\n\nfunction App() {\n  return (\n    <div>\n      <Main />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}